{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/AboutSection.js","sections/navigation.js","sections/TitlesAndIcons.js","components/SkillCard.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","DownIcon","onClick","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","icon","AboutSection","src_components_Fullpage","id","data","sections","title","items","map","p","content","modules","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","components_DownIcon","icons","down","name","Navigation","document","getElementsById","scrollIntoView","TitlesAndIcons","state","color","setState","_this2","onMouseOver","changeColor","onMouseLeave","subtitle","Object","keys","links","scroll","key","react_social_icons","url","console","log","SkillCard","skill","image","SkillSection","eachSkill","src_components_SkillCard","App","lib_default","navigation_Navigation","src_sections_TitlesAndIcons","src_sections_AboutSection","sections_SkillSection","scrollToTop","width","height","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f912a098.chunk.js","sourcesContent":["import React , {Component} from 'react';\r\nimport './Fullpage.css';\r\n\r\nclass Fullpage extends Component{\r\n    render() {\r\n        const{ children } = this.props\r\n        return(\r\n            <div className= { `fullpage ${this.props.className || ''}`}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage ","import React , {Compnent} from 'react';\r\n\r\nconst DownIcon =(props)=> { \r\n    return(\r\n        <div\r\n        onClick ={props.onClick}\r\n        style={{\r\n        display:\"flex\",\r\n        flexDirection:\"row\",\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n        marginBottom:\"-34px\",\r\n        transform:\"translateY(-45PX)\"\r\n    }}\r\n    >\r\n        <div\r\n            style={{\r\n                maxWidth:\"30px\"\r\n            }}>\r\n            <img src={props.icon} />\r\n        </div>\r\n    </div>\r\n\r\n    \r\n)}\r\nexport default DownIcon","import React , {Component} from 'react';\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from '../data.json';\r\nimport './AboutSection.css';\r\nimport DownIcon from '../components/DownIcon';\r\nimport { Link, Element  } from 'react-scroll';\r\n\r\nclass AboutSection extends Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n            <Fullpage className= \"second\" id=\"second\">\r\n              <h3>{data.sections[0].title}</h3>\r\n              <div className=\"paragraph\">\r\n                  {data.sections[0].items.map(p=>{\r\n                   return <p>{p.content}</p>\r\n                   })}\r\n               </div>\r\n            </Fullpage>\r\n                       <Link activeClass=\"active\"\r\n                       to=\"skill\"\r\n                       spy={true}\r\n                       smooth={true}\r\n                       offset={50}\r\n                       duration={500}\r\n                       onSetActive={this.handleSetActive}>\r\n                     \r\n                       <DownIcon\r\n                       icon= {data.icons.down}/>\r\n\r\n                       </Link>\r\n                       <Element name=\"skill\" className=\"element\">\r\n                       </Element>\r\n                       </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutSection ;","import React , {Component} from 'react';\r\nimport './navigation.css';\r\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\r\nimport './AboutSection';\r\nimport AboutSection from './AboutSection';\r\n\r\nexport default class Navigation extends Component{\r\n        myFunction() {\r\n        let elmnt = document.getElementsById(\"second\");\r\n        elmnt.scrollIntoView();\r\n    }\r\n    render(){\r\n \r\n        \r\n        return(\r\n                <div className=\"navigation\">\r\n                \r\n                    <div className=\"left-nav\">\r\n                        <div onClick=\"myFunction()\" >clickME! \r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n            \r\n                    <div className=\"right-nav\">\r\n                        <div className=\"left\">About </div>\r\n                        <div className=\"right\"\r\n                        onClick={\r\n                            <Link activeClass=\"active\"\r\n                            to=\"About\"\r\n                            spy={true}\r\n                            smooth={true}\r\n                            offset={50}\r\n                            duration={500}>\r\n                            </Link>\r\n                        }>skill</div>\r\n                    </div>\r\n                </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React , {Component} from 'react';\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from '../data.json';\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport './TitlesAndIcons.css';\r\nimport DownIcon from '../components/DownIcon';\r\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\nimport { SSL_OP_SINGLE_DH_USE } from 'constants';\r\n\r\n\r\nclass TitlesAndIcons extends Component{\r\n  state ={\r\n    color:'white'\r\n  }\r\n  changeColor () {\r\n      this.setState({\r\n        color:this.state.color === 'white' ?'yellow' : 'white'\r\n      })\r\n  }\r\n    render() {\r\n        return(\r\n          <div>\r\n            <Fullpage className= \"first\">\r\n            <div >\r\n                  <h1 className=\"title\"\r\n                  style={{\r\n                    color:this.state.color\r\n                  }}\r\n                    onMouseOver= {()=> {\r\n                      this.changeColor()\r\n                    }}\r\n                    onMouseLeave={()=>{\r\n                      this.changeColor()\r\n                    }}\r\n>\r\n                   {data.title} </h1>\r\n                  <h3 className=\"title\"> {data.subtitle} </h3>\r\n                  <div className=\"icon-wrapper\">\r\n                  {\r\n                    Object.keys(data.links , scroll).map(key=>{\r\n                      return(\r\n                        <SocialIcon className=\"socialicon\" url= {data.links[key]} /> \r\n                      );\r\n                    })}\r\n                    </div>\r\n           </div>\r\n           </Fullpage>\r\n\r\n           <Link activeClass=\"active\"\r\n           to=\"About\"\r\n           spy={true}\r\n           smooth={true}\r\n           offset={50}\r\n           duration={500}\r\n          onSetActive={this.handleSetActive}>\r\n         \r\n           <DownIcon\r\n           icon= {data.icons.down}\r\n           onClick ={ ()=> {\r\n             console.log(\"im working\")\r\n           }}\r\n           />\r\n           </Link>\r\n           <Element name=\"About\" className=\"element\">\r\n           </Element>\r\n           <div >\r\n           </div>\r\n           </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitlesAndIcons ","import React , {Component} from 'react';\r\nimport './SkillCard.css';\r\n\r\nclass SkillCard extends Component{\r\n    render() {\r\n        const {skill} = this.props\r\n        return(\r\n            <div className=\"card\">\r\n            <div className=\"image-wrapper\">\r\n            <img src={skill.content.image}/>\r\n            </div>\r\n            <div className=\"skill-title-wrapper\">\r\n            <h4>\r\n            {skill.content.title}\r\n            </h4>\r\n            </div>\r\n              </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillCard ","import React , {Component} from 'react';\r\nimport Fullpage from '../components/Fullpage';\r\nimport data from '../data.json';\r\nimport SkillCard from '../components/SkillCard';\r\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\r\n\r\n\r\nclass SkillSection extends Component{\r\n    render() {\r\n        return(\r\n            <Fullpage className= \"third\">\r\n                <h3>{data.sections[1].title}</h3>\r\n                <div className=\"cards-wrapper\">\r\n                    {\r\n                    data.sections[1].items.map(eachSkill=> {\r\n                        return(\r\n                            <SkillCard skill ={eachSkill} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Fullpage>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillSection ;","import React, { Component } from 'react';\nimport Navigation from './sections/navigation'\nimport TitlesAndIcons from './sections/TitlesAndIcons';\nimport AboutSection from './sections/AboutSection';\nimport SkillSection from './sections/SkillSection';\nimport './App.css';\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll';\nimport SnowStorm from 'react-snowstorm';\n\n\nclass App extends Component {\n  render() {\n    return (\n\n    <div className=\"app\">\n        <SnowStorm />\n        <Navigation/>\n        <TitlesAndIcons/>\n        <AboutSection/>\n        <SkillSection/>\n        <div onClick={\n          function() {\n            scroll.scrollToTop();\n          }\n        }\n        className=\"scroll-up\"\n        >\n          <img src=\"./scroll-up.png\" width=\"30px\" height=\"30px\"/>\n        </div>\n\n    </div>\n    \n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}